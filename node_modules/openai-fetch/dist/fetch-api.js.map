{"version":3,"file":"fetch-api.js","sourceRoot":"","sources":["../src/fetch-api.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,IAAI,CAAC;AAEpB,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAEpD,MAAM,gBAAgB,GAAG,2BAA2B,CAAC;AAMrD;;GAEG;AACH,MAAM,UAAU,iBAAiB,CAAC,IAKjC;IACC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,SAAS,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC;IACjE,MAAM,EAAE,OAAO,EAAE,KAAK,GAAG,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,EAAE,GAAG,SAAS,CAAC;IAE9E,yCAAyC;IACzC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;QACtB,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;KACxB;IACD,aAAa;IACb,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;QACrC,MAAM,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;QAC3B,IAAI,QAAQ,EAAE;YACZ,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC/B,MAAM,OAAO,GAAG,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC/C,IAAI,aAAiC,CAAC;YACtC,IAAI,OAA2B,CAAC;YAChC,IAAI,QAAQ,CAAC,IAAI,EAAE;gBACjB,MAAM,OAAO,GAAG,MAAM,QAAQ;qBAC3B,KAAK,EAAE;qBACP,IAAI,EAAE;qBACN,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;gBACxC,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC;gBACzC,OAAO,GAAG,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;aAC/C;YACD,OAAO,IAAI,QAAQ,CAAC,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;SAC9D;aAAM;YACL,OAAO,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;SAClE;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,EAAE,CAAC,MAAM,CAAC;QACf,SAAS,EAAE,OAAO,IAAI,SAAS,IAAI,gBAAgB;QACnD,OAAO,EAAE;YACP,YAAY,EAAE,cAAc;YAC5B,GAAG,CAAC,MAAM,IAAI;gBACZ,aAAa,EAAE,UAAU,MAAM,EAAE;aAClC,CAAC;YACF,GAAG,CAAC,cAAc,IAAI;gBACpB,qBAAqB,EAAE,cAAc;aACtC,CAAC;YACF,GAAG,OAAO;SACX;QACD,KAAK,EAAE,KAAK,IAAI;YACd,KAAK,EAAE,CAAC,YAAY,EAAE,EAAE;gBACtB,MAAM,aAAa,GAAG,GAAG,CAAC;gBAC1B,MAAM,MAAM,GAAG,aAAa,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBACxC,MAAM,KAAK,GAAG,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5D,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;YACjC,CAAC;SACF;QACD,OAAO,EAAE,OAAO,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE;QAClC,KAAK;QACL,GAAG,IAAI;KACR,CAAC,CAAC;AACL,CAAC;AAED,SAAS,YAAY,CACnB,OAAuC;IAEvC,IAAI;QACF,OAAO,CAAC,OAAO;YACb,CAAC,CAAC,EAAE;YACJ,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,OAAO;gBAC5B,CAAC,CAAC,MAAM,CAAC,WAAW,CAChB,KAAK,CAAC,IAAI,CAAC,OAA6B,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC;oBACxD,GAAG,MAAM;iBACV,CAAC,CACH;gBACH,CAAC,CAAC,EAAE,GAAG,OAAO,EAAE,CAAC;KACpB;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,EAAE,CAAC;KACX;AACH,CAAC;AAED,SAAS,QAAQ,CAAC,IAAY;IAC5B,IAAI;QACF,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACzB;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO,SAAS,CAAC;KAClB;AACH,CAAC;AAED,kEAAkE;AAClE,SAAS,aAAa,CAAC,GAAW,EAAE,GAAW;IAC7C,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AAC3C,CAAC","sourcesContent":["import ky from 'ky';\nimport type { KyInstance, Options } from 'ky';\nimport { APIError, castToError } from './errors.js';\n\nconst DEFAULT_BASE_URL = 'https://api.openai.com/v1';\n\nexport interface KyOptions extends Omit<Options, 'credentials'> {\n  credentials?: 'include' | 'omit' | 'same-origin';\n}\n\n/**\n * Create an instance of Ky with options shared by all requests.\n */\nexport function createApiInstance(args: {\n  apiKey: string;\n  baseUrl?: string;\n  organizationId?: string;\n  kyOptions?: KyOptions;\n}): KyInstance {\n  const { apiKey, baseUrl, organizationId, kyOptions = {} } = args;\n  const { headers, hooks = {}, prefixUrl, retry, timeout, ...rest } = kyOptions;\n\n  // Add a hook to handle OpenAI API errors\n  if (!hooks.beforeError) {\n    hooks.beforeError = [];\n  }\n  // @ts-ignore\n  hooks.beforeError.push(async (error) => {\n    const { response } = error;\n    if (response) {\n      const status = response.status;\n      const headers = parseHeaders(response.headers);\n      let errorResponse: Object | undefined;\n      let message: string | undefined;\n      if (response.body) {\n        const errText = await response\n          .clone()\n          .text()\n          .catch((e) => castToError(e).message);\n        errorResponse = safeJson(errText)?.error;\n        message = errorResponse ? undefined : errText;\n      }\n      return new APIError(status, errorResponse, message, headers);\n    } else {\n      return APIError.generate(undefined, error, undefined, undefined);\n    }\n  });\n\n  return ky.extend({\n    prefixUrl: baseUrl || prefixUrl || DEFAULT_BASE_URL,\n    headers: {\n      'User-Agent': 'openai-fetch',\n      ...(apiKey && {\n        Authorization: `Bearer ${apiKey}`,\n      }),\n      ...(organizationId && {\n        'OpenAI-Organization': organizationId,\n      }),\n      ...headers,\n    },\n    retry: retry ?? {\n      delay: (attemptCount) => {\n        const INITIAL_DELAY = 0.3;\n        const jitter = numberBetween(-0.3, 0.3);\n        const sleep = INITIAL_DELAY * Math.pow(attemptCount - 1, 2);\n        return (sleep + jitter) * 1000;\n      },\n    },\n    timeout: timeout ?? 1000 * 60 * 10,\n    hooks,\n    ...rest,\n  });\n}\n\nfunction parseHeaders(\n  headers: HeadersInit | null | undefined,\n): Record<string, string> {\n  try {\n    return !headers\n      ? {}\n      : Symbol.iterator in headers\n      ? Object.fromEntries(\n          Array.from(headers as Iterable<string[]>).map((header) => [\n            ...header,\n          ]),\n        )\n      : { ...headers };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction safeJson(text: string) {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n}\n\n/** Get a random number between the specified range [min, max]. */\nfunction numberBetween(min: number, max: number): number {\n  return Math.random() * (max - min) + min;\n}\n"]}